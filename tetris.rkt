#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 5172 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 187
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e tetris) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #("
 #"#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Tetris"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; <Liam Neville> Assign4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 17 3 44 #"; the maximal number of blocks horizontally "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 2 #") "
0 0 17 3 41 #"; the maximal number of blocks vertically"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; graphical constants "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 17 3 20 #"; blocks are square "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #" "
0 0 17 3 50 #"; they are rendered as red squares with black rims"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orchid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gold\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"chartreuse\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"crimson\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCENE-SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"MT"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCENE-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCENE-SIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #"; since blocks are squrare the scene will be the number of boxes by "
 #"the size of the boxes"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"tetris"
0 0 24 3 2 #" ("
0 0 14 3 5 #"block"
0 0 24 3 1 #" "
0 0 14 3 9 #"landscape"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"block"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"im"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; A Tetris is a structure:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";   (make-tetris Block Landscape)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; fun-for-tetris : tetris -> ..."
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; (define (fun-for-tetris t)"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";  (...(fun-for-block (tetris-block t))...(fun-for-landscape (tetris"
 #"-landscape t))...))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; A Landscape is one of: "
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; \342\200\223 '() "
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; \342\200\223 (cons Block Landscape)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; fun-for-landscape : landscape -> ..."
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; (define (fun-for-landscape l)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";   [(empty? l) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";   [(cons? l) ...(fun-for-block (first l))...(fun-for-landscape (re"
 #"st l))]))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; Block is a structure:"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";   (make-block N N)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; fun-for-block : block -> ..."
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; (define (fun-for-block b)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";  (...(block-x b)...(block-y b)...(block-im b))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; interpretation (make-block x y) depicts a block whose left corner "
 #"is"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; (* x SIZE) pixels from the left and (* y SIZE) pixels from the top"
 #";"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#"; (make-tetris b0 (list b1 b2 ...)) means b0 is the currently "
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; dropping block, while b1, b2, etc are the resting ones"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Functional Examples"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"block01"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"block10"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"block2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"blockr"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"block18"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris0"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"tetris0-drop"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 7 #"block18"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"blockr"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #") "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris56"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #") "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris65"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #") "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris45"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #") "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapedone"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"block01"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"block2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"landscapedone2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"block01"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"block2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapeover"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisfull"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapedone"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"landscape1over"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 90
(
 #"                                                                    "
 #"                     ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 96
(
 #"                                                                    "
 #"                           ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 102
(
 #"                                                                    "
 #"                                 ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 108
(
 #"                                                                    "
 #"                                       ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 114
(
 #"                                                                    "
 #"                                             ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 120
(
 #"                                                                    "
 #"                                                   ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 126
(
 #"                                                                    "
 #"                                                         ("
) 0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 132
(
 #"                                                                    "
 #"                                                               ("
) 0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"landscapedone2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 14 #"()))))))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #"; tetrisnew1, tetrisnew2,..., tetrisnew51 are used in the check-memb"
 #"er-of for the random functions that randomize the"
) 0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #"; column and color of the new dropping block. I have so many example"
 #"s because whena new block drops there are"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#"; 10 random columns x 5 colors = 50 or so possibilities..."
0 0 24 29 1 #"\n"
0 0 17 3 115
(
 #";-------------------------------------------------------------------"
 #"-----------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 156
(
 #";-------------------------------------------------------------------"
 #"----------------------------------------------                      "
 #"                    "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";------------------------RENDERING FUNCTIONS------------------------"
 #"--------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; tetris-render : tetris -> image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tetris-render"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"landscape-render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tetris-render"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 2 #"MT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; physical-x : block -> num"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"physical-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 4 #"SIZE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"physical-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; physical-y : block -> num"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"physical-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 4 #"SIZE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"physical-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; landscape-render : landscape -> image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"landscape-render"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"MT"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 8 #"block-im"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"physical-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"physical-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"landscape-render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"landscape-render"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #") "
0 0 14 3 2 #"MT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"landscape-render"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 2 #"MT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";-----------------------------PHYSICAL FUNCTIONS--------------------"
 #"------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; drop-block : block -> block"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; consumes a block and drops it by one SIZE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-block"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"block-im"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 2 #") "
0 0 14 3 7 #"block01"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; left-block : block -> block"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; consumes a block and moves it one column to the left "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-block"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 8 #"block-im"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"block10"
0 0 24 3 2 #") "
0 0 14 3 7 #"block00"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; right-block : block -> block"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; consumes a block and moves it one column to the right"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-block"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 8 #"block-im"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 2 #") "
0 0 14 3 7 #"block10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; floor? : block -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; determines if a block hit the floor of the scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"floor?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"floor?"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"floor?"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; right-edge? : block -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; determines if a block is at the right edge of the scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-edge?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-edge?"
0 0 24 3 1 #" "
0 0 14 3 6 #"blockr"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-edge?"
0 0 24 3 1 #" "
0 0 14 3 7 #"block00"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; left-edge? : block -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; determines if a block is at the left edge of the scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-edge?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-edge?"
0 0 24 3 1 #" "
0 0 14 3 14 #"block-on-block"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-edge?"
0 0 24 3 1 #" "
0 0 14 3 6 #"blockr"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; landscape->posns : landscape : list-of-posns"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"landscape->posns"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"block-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 16 #"landscape->posns"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; member-of : tetris -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #"; determines if the block is equal in position to any of the blocks "
 #"in the landscape"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"member-of"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"member?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"block-y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #"))) ("
0 0 14 3 16 #"landscape->posns"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; block=? : block block -> bool"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"block-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"block-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; left-hit? : tetris -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; determines if a block has hit a block to its left"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"left-hit?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"member-of"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-block"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"left-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris3"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"left-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; right-hit? : tetris -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; determines if a block has hit a block to its right"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"right-hit?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"member-of"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-block"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"right-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris4"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"right-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; landed? : tetris -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; determines if the block landed on one of the resting blocks in the"
 #" landscape or hit the floor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"floor?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"member-of"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-block"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris5"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; left-shift : tetris -> tetris"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; shifts the block in the tetris to the left if it is unobstructed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 9 #"left-hit?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"left-edge?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-block"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-shift"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris45"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"left-shift"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris3"
0 0 24 3 2 #") "
0 0 14 3 7 #"tetris3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; right-shift : tetris -> tetris"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; shifts the block in the tetris to the right if it is unobstructed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"right-hit?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 11 #"right-edge?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-block"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-shift"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris65"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-shift"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris4"
0 0 24 3 2 #") "
0 0 14 3 7 #"tetris4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; down-shift : tetris -> tetris"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; shifts the block of the tetris down if it is unobstructed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"down-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"bottom-full?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 14 #"drop-landscape"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-block"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"down-shift"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris56"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 10 #"down-shift"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; creates a new block once the last block lands at a random column"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"random-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 7 #"landed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-tetris"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 14 3 8 #"random-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 9 #"random-im"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK1"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK2"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK3"
0 0 24 3 1 #" "
0 0 14 3 6 #"BLOCK4"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tetris-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; random-im : im im im im im -> im"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #"; randomly selects one of the colored blocks for the new-block funct"
 #"ion"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"random-im"
0 0 24 3 1 #" "
0 0 14 3 3 #"im1"
0 0 24 3 1 #" "
0 0 14 3 3 #"im2"
0 0 24 3 1 #" "
0 0 14 3 3 #"im3"
0 0 24 3 1 #" "
0 0 14 3 3 #"im4"
0 0 24 3 1 #" "
0 0 14 3 3 #"im5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 3 #"im1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 3 #"im2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 3 #"im3"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 3 #"im4"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 3 #"im5"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-member-of"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 14 3 10 #"tetrisnew1"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew2"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew3"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew4"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew5"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew6"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew7"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew8"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisnew9"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew10"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew11"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew12"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew13"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew14"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew15"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew16"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew17"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew18"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew19"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew20"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew21"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew22"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew23"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew24"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew25"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew26"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew27"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew28"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew29"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew30"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew31"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew32"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew33"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew34"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew35"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew36"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew37"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew38"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew39"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew40"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew41"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew42"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"tetrisnew43"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew44"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew45"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew46"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew47"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew48"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew49"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew50"
0 0 24 3 1 #" "
0 0 14 3 11 #"tetrisnew51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-block"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris1"
0 0 24 3 2 #") "
0 0 14 3 7 #"tetris1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; count-bottom-block : landscape -> num"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; counts how many blocks in the landscape are on the bottom row"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-bottom-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-bottom-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 18 #"count-bottom-block"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-bottom-block"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapefull"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-bottom-block"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; bottom-full? : landscape -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #"; consumes a landscape and determines if the landscape contains a fu"
 #"ll bottom row of 10 blocks"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapefull"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"block-landed"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-block"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"BLOCK"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 13 #"())))))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bottom-full?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-bottom-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bottom-full?"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapefull"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bottom-full?"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape2"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; drop-landscape : landscape -> landscape"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; shifts all blocks in the landscape down a row"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"drop-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-block"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"drop-landscape"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 141
(
 #";---------------------------------------------------------------FINA"
 #"L FUNCTIONS---------------------------------------------------------"
 #"-----"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; game-over? landscape -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; determines if the landscape contains a block on the top row"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"block-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 10 #"game-over?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 13 #"landscapedone"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 14 #"landscapedone2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"end-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"game-over?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"end-game"
0 0 24 3 1 #" "
0 0 14 3 10 #"tetrisfull"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"end-game"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris2"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; key-handler : tetris key -> tetris"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; consumes key and moves the block in the tetris based on key press"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"left-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"right-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"down-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris45"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris65"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris56"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 8 #"tetris55"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 2 #") "
0 0 14 3 8 #"tetris55"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; last-scene : tetris -> image"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; produces last scene with GAME-OVER and number of blocks displayed "
 #"as SCORE"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"last-scene"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-score"
0 0 24 3 2 #" ("
0 0 14 3 15 #"count-landscape"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tetris-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCENE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCENE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 13 #"tetris-render"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; Box below is code to count the number of rows cleared"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #"; rather than just the total blocks. I couldn't get it quite working"
 #" but here was my thinking"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         343 4           0 0           0 56 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; rows-cleared landscape -> num"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; using the existing function count-landscape which counts the"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; total blocks on the visual landscape as well as the blocks that h"
 #"ave been cleared"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; from filling the bottom row."
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; 86 = 40+ 46"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; count-landscape l = rowfilled*WIDTH + blocks on visual scene"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; in-scene : landscape -> num"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; counts how many blocks are in visual landscape"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(define (in-scene l)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";    [(empty? l) 0]"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";    [(cons? l) (if (and (<= 0 (block-x (first l)) (- WIDTH 1))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";                        (<= 0 (block-y (first l)) (- WIDTH 1)))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";                   (add1 (in-scene (rest l)))"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";                   (in-scene (rest l)))]))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";(check-expect (in-scene landscapedone2) 3)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";(check-expect (in-scene landscapeover) 1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; rows-cleared : landscape -> num"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; consumes a landscape and produces the number of rows cleared"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";(define (rows-cleared l)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";  (/ (- (count-landscape l) (in-scene l)) WIDTH))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";(check-expect (rows-cleared landscape1over) 1)"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; count-landscape : landscape -> num"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; counts the number of blocks in the landscape"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"count-landscape"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 15 #"count-landscape"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"count-landscape"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"count-landscape"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape1"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"count-landscape"
0 0 24 3 1 #" "
0 0 14 3 10 #"landscape2"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; game-score : num num -> string"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"GAME OVER SCORE :  \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-score"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 2 #") "
0 0 19 3 23 #"\"GAME OVER SCORE :  42\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; BIG BANG EXPRESSION"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 7 #"tetris0"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 10 #"down-shift"
0 0 24 3 1 #" "
0 0 21 3 4 #"1/12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 13 #"tetris-render"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-game"
0 0 24 3 1 #" "
0 0 14 3 10 #"last-scene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0           0
